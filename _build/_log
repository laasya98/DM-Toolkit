### Starting build.
# Target: main.ml.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules main.ml > main.ml.depends
+ ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules main.ml > main.ml.depends
File "main.ml", line 104, characters 6-9:
Warning 1: this is the start of a comment.
# Target: command.mli.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules command.mli > command.mli.depends # cached
# Target: global.mli.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:global.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules global.mli > global.mli.depends # cached
# Target: global.cmi, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:global.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o global.cmi global.mli # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o command.cmi command.mli # cached
# Target: database.mli.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:database.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules database.mli > database.mli.depends # cached
# Target: database.cmi, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:database.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o database.cmi database.mli # cached
# Target: state.mli.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules state.mli > state.mli.depends # cached
# Target: character.mli.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:character.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules character.mli > character.mli.depends # cached
# Target: character.cmi, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:character.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o character.cmi character.mli # cached
# Target: event.mli.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:event.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules event.mli > event.mli.depends # cached
# Target: event.cmi, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:event.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o event.cmi event.mli # cached
# Target: state.cmi, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o state.cmi state.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o main.cmo main.ml
+ ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o main.cmo main.ml
File "main.ml", line 104, characters 6-9:
Warning 1: this is the start of a comment.
# Target: command.ml.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o command.cmo command.ml # cached
# Target: database.ml.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:database.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules database.ml > database.ml.depends # cached
# Target: database.cmo, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:database.cmo, file:database.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o database.cmo database.ml # cached
# Target: state.ml.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o state.cmo state.ml # cached
# Target: global.ml.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:global.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules global.ml > global.ml.depends # cached
# Target: global.cmo, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:global.cmo, file:global.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o global.cmo global.ml # cached
# Target: character.ml.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:character.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules character.ml > character.ml.depends # cached
# Target: character.cmo, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:character.cmo, file:character.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o character.cmo character.ml # cached
# Target: event.ml.depends, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:event.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -modules event.ml > event.ml.depends # cached
# Target: event.cmo, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:event.cmo, file:event.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal -o event.cmo event.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(csv), package(oUnit), package(qcheck), package(str), package(unix), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package csv -package unix -package oUnit -package str -package qcheck -package ANSITerminal global.cmo command.cmo database.cmo character.cmo event.cmo state.cmo main.cmo -o main.byte
# Compilation successful.
